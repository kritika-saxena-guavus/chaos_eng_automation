{
	"version": "1.0.0",
	"title": "Experiment with bringing an active node down on the cluster.",
	"description": "The node should get restored back to a pingable state, all ambari services should get restored and the data already present in the hive table should remain intact. ",
	"tags": [
		"node",
		"platform"
	],
	"controls": [{
		"name": "node-controls",
		"provider": {
			"type": "python",
			"module": "chaostoolkit_nimble.controllers.platform.nodes.control"
		}
	}],
	"steady-state-hypothesis": {
		"title": "Check node '{{node_alias}}' up, all ambari services are up and the all data in a hive table remains intact",
		"probes": [{
				"type": "probe",
				"name": "Check node '{{node_alias}}' is up and pingable.  ",
				"tolerance": true,
				"provider": {
					"module": "chaostoolkit_nimble.core.utils.node_ha_utils",
					"type": "python",
					"func": "is_node_up_and_running",
					"arguments": {
						"node_alias": "{{node_alias}}"
					}
				}
			},
			{
				"type": "probe",
				"name": "Check all ambari services are up on the cluster.   ",
				"tolerance": true,
				"provider": {
					"module": "chaostoolkit_nimble.core.utils.ambari_ha_utils",
					"type": "python",
					"func": "are_all_services_running"
				}
			},
			{
                "type": "probe",
                "name": "Check that the already present data in a hive table is intact.   ",
                "tolerance": true,
                "provider": {
                    "module": "chaostoolkit_nimble.actions.base.flows.chaos_user_actions",
                    "type": "python",
                    "func": "regress",
                    "arguments": {
                        "expected_file_server_path": "{{expected_file_server_path}}",
                        "entity_alias": "{{entity_alias}}",
                        "output_alias": "{{output_alias}}"
                    }
                }
            }
		]
	},
	"method": [{
		"type": "action",
		"name": "Reboot node '{{node_alias}}'.  ",
		"provider": {
			"module": "chaostoolkit_nimble.core.utils.node_ha_utils",
			"type": "python",
			"func": "reboot_node",
			"arguments": {
				"node_alias": "{{node_alias}}"
			}
		}
	}],
	"rollbacks": []
}